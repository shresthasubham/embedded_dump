C51 COMPILER V9.60.7.0   MUL_TABLE                                                         01/20/2024 15:15:49 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MUL_TABLE
OBJECT MODULE PLACED IN .\Objects\mul-table.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE mul-table.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\mul-table.lst) TABS(2) OBJECT(.\Objects\mul-table.obj)

line level    source

   1          #include <reg51.h>
   2          #include <absacc.h>
   3          
   4          static unsigned char decimal_to_7seg[10] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f};
   5          static unsigned char display_control_bits[4] = {0x08, 0x04, 0x02, 0x01};
   6          
   7          #define DELAY 30
   8          #define DELAY_DOUBLE 50
   9          
  10          #define TABLE_AT 0x40
  11          
  12          void delay(unsigned long amount) {
  13   1        unsigned long i, j;
  14   1        for(i = 0; i < amount; ++i) {
  15   2          for(j = 0; j < 500; ++j);
  16   2        } 
  17   1      }
  18          
  19          unsigned char convert_to_bcd4(unsigned int n, unsigned char digits[4]) {
  20   1        unsigned char n_digits = 0;
  21   1        do {
  22   2          digits[n_digits++] = n % 10;
  23   2          n /= 10;
  24   2        } while (n > 0);
  25   1        
  26   1        return n_digits;
  27   1      }
  28          
  29          void display_number(unsigned int n) {
  30   1        unsigned int i, j, k;
  31   1        unsigned char digits[4], n_digits;
  32   1        
  33   1        n_digits = convert_to_bcd4(n, digits);
  34   1        
  35   1        for(j = 0; j < 200; ++j) {
  36   2          for(k = 0; k < n_digits; ++k) {
  37   3            P2 = 0;
  38   3            P0 = decimal_to_7seg[digits[k]];
  39   3            delay(7);
  40   3            P2 = display_control_bits[k];
  41   3            
  42   3            for(i = 0; i < 100; ++i);
  43   3          }
  44   2        }
  45   1      }
  46          
  47          void generate_mul_table(unsigned char n) {
  48   1        unsigned char i;
  49   1        for(i = 1; i <= 10; ++i) {
  50   2          DBYTE[TABLE_AT + i - 1] = n * i;
  51   2        }
  52   1      }
  53          
  54          void main() {
C51 COMPILER V9.60.7.0   MUL_TABLE                                                         01/20/2024 15:15:49 PAGE 2   

  55   1        unsigned char i;
  56   1        
  57   1        DBYTE[0x30] = 9;
  58   1        generate_mul_table(DBYTE[0x30]);
  59   1        
  60   1        P0 = 0x00;
  61   1        P2 = 0x00;
  62   1        while(1) {
  63   2          for(i = 0; i < 10; ++i) {
  64   3            display_number(DBYTE[TABLE_AT + i]);
  65   3          }
  66   2        }
  67   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    356    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
